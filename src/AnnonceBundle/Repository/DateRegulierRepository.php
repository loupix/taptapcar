<?php

namespace AnnonceBundle\Repository;
use AnnonceBundle\Entity\DateRegulier;

/**
 * DateRegulierRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DateRegulierRepository extends \Doctrine\ORM\EntityRepository
{
	public function getOrCreate(\DateTime $dateTime){
		$date = $this->createQueryBuilder("d")
			->eq("date", $dateTime)
			->setMaxResults(1)->getQuery()->getOneOrNullResult();
		if(is_null($date)){
			$date = new DateRegulier();
			$date->setDate($dateTime);
			$this->_em()->persist($date);
			$this->_em()->flush();
		}
		return $date;
	}


	private function getMultiDate($arrayDates){
		return $this->createQueryBuilder("d")
			->where("d.date IN (:dates)")
			->setParameter('dates', array_map(function($d){return $d->format("Y-m-d");},$arrayDates))
			->getQuery()->getResult();
	}

	public function getOrCreateMulti($arrayDates){
		$dateObjs = $this->getMultiDate($arrayDates);

		$dateArrayObj = array_map(function($d){return $d->getDate();}, $dateObjs);
		$nbNew = 0;
		$em = $this->getEntityManager();
		foreach ($arrayDates as $dateValue) {
			if(in_array($dateValue, $dateArrayObj))
				continue;
			
			$date = new DateRegulier();
			$date->setDate($dateValue);
			$em->persist($date);
			$nbNew++;
		}
		if($nbNew>0)
			$em->flush();


		return $this->getMultiDate($arrayDates);

	}



	public function genDatesSemaines($joursSemaines, $dateDepard, $generate=False){
		$nbAnnee = 10;
		$dateDepard->setTime(0,0,0);
		$allDates = array();
		for($i=0;$i<=$nbAnnee;$i++){
			$yearEncours = $dateDepard->format("Y");
			$lastDay = new \DateTime($yearEncours."-12-31");
			$resteDays = $lastDay->diff($dateDepard); // reste de jours dans l'ann√©e
			$newDate = $dateDepard;
			for($j=0;$j<$resteDays->days;$j++){
				$newDate = $newDate->add(new \DateInterval("P1D")); // on ajoute 1 jour
				if(in_array($newDate->format("N"), $joursSemaines))
					$allDates[] = clone $newDate;
			}
			$dateDepard = $dateDepard->add(new \DateInterval("P1Y1D"));
		}
		if($generate)
			return $this->getOrCreateMulti($allDates);
		return $allDates;
	}
}
